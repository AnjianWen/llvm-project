#ifndef LLVM_LIB_TARGET_RISCW_INSTPRINTER_RISCWINSTPRINTER_H
#define LLVM_LIB_TARGET_RISCW_INSTPRINTER_RISCWINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class RISCWInstPrinter : public MCInstPrinter {
public:
  RISCWInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                  const MCRegisterInfo &MRI)
     : MCInstPrinter(MAI, MII, MRI) {};

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  static const char *getRegisterName(MCRegister Reg);
  static const char *getRegisterName(MCRegister Reg, unsigned AltIdx);

  // void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printRegName(raw_ostream &O, MCRegister Reg) const override;

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  // bool printAliasInstr(const MCInst *MI, raw_ostream &OS);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);

  void printCustomAliasOperand(const MCInst *MI, uint64_t idx, unsigned OpIdx,
                               unsigned PrintMethodIdx, raw_ostream &O);

private:
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
};
} // end namespace llvm

#endif // end LLVM_LIB_TARGET_RISCW_INSTPRINTER_RISCWINSTPRINTER_H
